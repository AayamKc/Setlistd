Complete Supabase Storage Bucket Setup Guide

Prerequisites
- Access to your Supabase project dashboard
- Project URL and API keys configured in your .env file

Step 1: Access Supabase Storage

1. Go to https://app.supabase.com
2. Log in to your account
3. Select your project from the dashboard
4. In the left sidebar, click on "Storage" (it has a folder icon)

Step 2: Create the Required Buckets

You need to create three buckets. Here's how to create each one:

A. Create "profile-pictures" Bucket

1. Click the "New bucket" button
2. Fill in the following details:
   - Name: profile-pictures
   - Public bucket: CHECK THIS BOX (IMPORTANT!)
   - File size limit: Set to 5 and select MB from dropdown
   - Allowed MIME types: Click "Add MIME type" and add these one by one:
     - image/jpeg
     - image/jpg
     - image/png
     - image/gif
3. Click "Create bucket"

B. Create "banner-images" Bucket

1. Click "New bucket" again
2. Fill in the following details:
   - Name: banner-images
   - Public bucket: CHECK THIS BOX (IMPORTANT!)
   - File size limit: Set to 5 and select MB from dropdown
   - Allowed MIME types: Click "Add MIME type" and add these one by one:
     - image/jpeg
     - image/jpg
     - image/png
     - image/gif
3. Click "Create bucket"

C. Create "post-media" Bucket

1. Click "New bucket" again
2. Fill in the following details:
   - Name: post-media
   - Public bucket: CHECK THIS BOX (IMPORTANT!)
   - File size limit: Set to 50 and select MB from dropdown
   - Allowed MIME types: Click "Add MIME type" and add these one by one:
     - image/jpeg
     - image/jpg
     - image/png
     - image/gif
     - video/mp4
     - video/quicktime
3. Click "Create bucket"

Step 3: Set Up Storage Policies (RLS)

For each bucket, you need to set up policies to control access:

Setting Up Policies:

1. Click on one of your newly created buckets (e.g., profile-pictures)
2. Click on the "Policies" tab
3. You'll see a message about RLS. Click "New policy"

Create Three Policies for Each Bucket:

Policy 1: Allow Public Viewing
1. Click "Get started quickly" or "Create new policy"
2. Select "For full customization"
3. Fill in:
   - Policy name: Allow public viewing
   - Policy command: Select SELECT
   - Target roles: Check anon and authenticated
4. In the "Policy definition" section, use:
   true
5. Click "Review" then "Save policy"

Policy 2: Allow Authenticated Uploads
1. Click "New policy" again
2. Select "For full customization"
3. Fill in:
   - Policy name: Allow authenticated uploads
   - Policy command: Select INSERT
   - Target roles: Check only authenticated
4. In the "Policy definition" section, use:
   true
5. Click "Review" then "Save policy"

Policy 3: Allow Users to Delete Their Own Files
1. Click "New policy" again
2. Select "For full customization"
3. Fill in:
   - Policy name: Allow users to delete own files
   - Policy command: Select DELETE
   - Target roles: Check only authenticated
4. In the "Policy definition" section, use:
   auth.uid()::text = (storage.foldername(name))[1]
5. Click "Review" then "Save policy"

REPEAT THESE THREE POLICIES FOR ALL THREE BUCKETS!

Step 4: Verify Your Setup

1. Go back to the main Storage page
2. You should see all three buckets listed:
   - profile-pictures
   - banner-images
   - post-media
3. Each should show as "Public" in the visibility column

Step 5: Test Your Setup

1. Go to your application
2. Try uploading a profile picture
3. Try uploading a banner image
4. Both should work now!

Troubleshooting

If uploads still fail:

1. Check bucket names: Ensure they match exactly (case-sensitive)
2. Check public access: Make sure all buckets are marked as public
3. Check your .env file: Ensure you have:
   SUPABASE_URL=your-project-url
   SUPABASE_SERVICE_KEY=your-service-role-key
4. Check CORS settings: 
   - Go to Settings â†’ API in Supabase
   - Make sure your frontend URL is in the allowed origins

Common Issues:

- "Bucket not found": The bucket name doesn't match or hasn't been created
- "Permission denied": The bucket isn't public or policies aren't set correctly
- "File too large": The file exceeds the size limit you set
- "Invalid file type": The MIME type isn't in the allowed list

Important Security Notes

1. The service role key should ONLY be used on the server side
2. Never expose the service role key in client-side code
3. The buckets are public for viewing, but only authenticated users can upload
4. Users can only delete files in their own folders (based on user ID)

Next Steps

Once your buckets are created and working:
1. Test profile picture upload
2. Test banner image upload
3. Monitor storage usage in the Supabase dashboard
4. Consider setting up image optimization/resizing if needed